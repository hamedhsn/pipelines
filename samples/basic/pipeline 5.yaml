apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: sequential-pipeline-test-
spec:
  arguments:
    parameters:
    - name: url
      value: gs://ml-pipeline-playground/shakespeare1.txt
  entrypoint: sequential-pipeline-test
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - echo $MSG;echo "$0"
      - '{{inputs.parameters.gcs-download-data}}'
      command:
      - sh
      - -c
      env:
      - name: MSG
        value: hello world
      image: library/bash:4.4.23
      volumeMounts:
      - mountPath: /mnt/workflow
        name: pipeline
    inputs:
      parameters:
      - name: gcs-download-data
    name: echo
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /mlpipeline-ui-metadata.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: 172.20.133.145:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-ui-metadata.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      - name: mlpipeline-metrics
        path: /mlpipeline-metrics.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: 172.20.133.145:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-metrics.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
  - container:
      args:
      - gsutil cat $0 | tee $1
      - '{{inputs.parameters.url}}'
      - /mnt/workflow/results.txt
      command:
      - sh
      - -c
      image: google/cloud-sdk:216.0.0
      resources:
        limits:
          nvidia.com/gpu: 1
      volumeMounts:
      - mountPath: /mnt/workflow
        name: pipeline
    inputs:
      parameters:
      - name: url
    name: gcs-download
    nodeSelector:
      beta.kubernetes.io/instance-type: p2.xlarge
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /mlpipeline-ui-metadata.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: 172.20.133.145:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-ui-metadata.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      - name: mlpipeline-metrics
        path: /mlpipeline-metrics.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: 172.20.133.145:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-metrics.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      parameters:
      - name: gcs-download-data
        valueFrom:
          path: /mnt/workflow/results.txt
    tolerations:
    - effect: NoSchedule
      key: gpu
      operator: Equal
      value: run
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: gcs-download-data
            value: '{{tasks.gcs-download.outputs.parameters.gcs-download-data}}'
        dependencies:
        - gcs-download
        name: echo
        template: echo
      - arguments:
          parameters:
          - name: url
            value: '{{inputs.parameters.url}}'
        name: gcs-download
        template: gcs-download
    inputs:
      parameters:
      - name: url
    name: sequential-pipeline-test
  volumes:
  - name: pipeline
    persistentVolumeClaim:
      claimName: research-pvc-silo
